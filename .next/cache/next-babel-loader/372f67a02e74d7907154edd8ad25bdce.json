{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/alexandragergar/Desktop/catalog_sitel/components/ChoiceContainer.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Checkbox from \"./Checkbox\";\nimport { filterCatagories } from '../data/filtercatagorydata';\n\nvar ChoiceContainer = /*#__PURE__*/function (_Component) {\n  _inherits(ChoiceContainer, _Component);\n\n  var _super = _createSuper(ChoiceContainer);\n\n  function ChoiceContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ChoiceContainer);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onCheckboxChange\", function (event) {\n      var item = event.target.name;\n      var isChecked = event.target.checked;\n\n      _this.setState(function (prevState) {\n        return {\n          checkedItems: prevState.checkedItems.set(item, isChecked)\n        };\n      });\n    });\n\n    _this.state = {\n      checkedItems: new Map()\n    };\n    return _this;\n  }\n\n  _createClass(ChoiceContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var checkboxes = filterCatagories[0].options.map(function (item) {\n        return __jsx(\"ul\", {\n          \"class\": \"list-group\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }\n        }, __jsx(\"li\", {\n          \"class\": \"list-group-item\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }\n        }, __jsx(\"label\", {\n          key: item.key,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }\n        }, __jsx(Checkbox, {\n          name: item.name,\n          checked: _this2.state.checkedItems.get(item.name),\n          onChange: _this2.onCheckboxChange,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }\n        }), __jsx(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }\n        }, item.label))));\n      });\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 12\n        }\n      }, checkboxes);\n    }\n  }]);\n\n  return ChoiceContainer;\n}(Component);\n\nexport { ChoiceContainer as default };","map":{"version":3,"sources":["/Users/alexandragergar/Desktop/catalog_sitel/components/ChoiceContainer.js"],"names":["React","Component","Checkbox","filterCatagories","ChoiceContainer","props","event","item","target","name","isChecked","checked","setState","prevState","checkedItems","set","state","Map","checkboxes","options","map","key","get","onCheckboxChange","label"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;;IAEqBC,e;;;;;AACnB,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,uEAOA,UAAAC,KAAK,EAAI;AAC1B,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAA1B;AACA,UAAMC,SAAS,GAAGJ,KAAK,CAACE,MAAN,CAAaG,OAA/B;;AACA,YAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BC,UAAAA,YAAY,EAAED,SAAS,CAACC,YAAV,CAAuBC,GAAvB,CAA2BR,IAA3B,EAAiCG,SAAjC;AADY,SAAL;AAAA,OAAvB;AAGD,KAbkB;;AAEjB,UAAKM,KAAL,GAAa;AACXF,MAAAA,YAAY,EAAE,IAAIG,GAAJ;AADH,KAAb;AAFiB;AAKlB;;;;6BAUQ;AAAA;;AACP,UAAMC,UAAU,GAAGf,gBAAgB,CAAC,CAAD,CAAhB,CAAoBgB,OAApB,CAA4BC,GAA5B,CAAgC,UAACb,IAAD,EAAU;AAC3D,eACE;AAAI,mBAAM,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAI,mBAAM,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,GAAG,EAAEA,IAAI,CAACc,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,QAAD;AACE,UAAA,IAAI,EAAEd,IAAI,CAACE,IADb;AAEE,UAAA,OAAO,EAAE,MAAI,CAACO,KAAL,CAAWF,YAAX,CAAwBQ,GAAxB,CAA4Bf,IAAI,CAACE,IAAjC,CAFX;AAGE,UAAA,QAAQ,EAAE,MAAI,CAACc,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOhB,IAAI,CAACiB,KAAZ,CANF,CADF,CADF,CADF;AAeD,OAhBkB,CAAnB;AAiBA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMN,UAAN,CAAP;AACD;;;;EAnC0CjB,S;;SAAxBG,e","sourcesContent":["import React, { Component } from \"react\";\nimport Checkbox from \"./Checkbox\";\nimport {filterCatagories} from '../data/filtercatagorydata';\n\nexport default class ChoiceContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkedItems: new Map()\n    }\n  }\n\n  onCheckboxChange = event => {\n    const item = event.target.name;\n    const isChecked = event.target.checked;\n    this.setState(prevState => ({\n      checkedItems: prevState.checkedItems.set(item, isChecked)\n    }));\n  };\n\n  render() {\n    const checkboxes = filterCatagories[0].options.map((item) => {\n      return (\n        <ul class=\"list-group\">\n          <li class=\"list-group-item\">\n            <label key={item.key}>\n              <Checkbox\n                name={item.name}\n                checked={this.state.checkedItems.get(item.name)}\n                onChange={this.onCheckboxChange}\n              />\n              <span>{item.label}</span>\n            </label>\n          </li>\n        </ul>\n      );\n      \n    });\n    return <div>{checkboxes}</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}