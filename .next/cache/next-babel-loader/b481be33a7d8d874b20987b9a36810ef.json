{"ast":null,"code":"var _jsxFileName = \"/Users/alexandragergar/Desktop/catalog_sitel/components/ChoiceContainer.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Checkbox from \"./Checkbox\";\nimport { filterCatagories } from '../data/filtercatagorydata';\nexport default class ChoiceContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onCheckboxChange\", event => {\n      const item = event.target.name;\n      const isChecked = event.target.checked;\n      this.setState(prevState => ({\n        checkedItems: prevState.checkedItems.set(item, isChecked)\n      }));\n    });\n\n    this.state = {\n      checkedItems: new Map()\n    };\n  }\n\n  render() {\n    const checkboxes = filterCatagories[0].options.map(item => {\n      return __jsx(\"li\", {\n        className: \"list-group-item\",\n        key: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, __jsx(Checkbox, {\n        name: item.name,\n        checked: this.state.checkedItems.get(item.name),\n        onChange: this.onCheckboxChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }\n      }), __jsx(\"span\", {\n        className: \"pl-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      }, item.label)));\n    });\n    return __jsx(\"ul\", {\n      className: \"list-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, checkboxes);\n  }\n\n}","map":{"version":3,"sources":["/Users/alexandragergar/Desktop/catalog_sitel/components/ChoiceContainer.js"],"names":["React","Component","Checkbox","filterCatagories","ChoiceContainer","constructor","props","event","item","target","name","isChecked","checked","setState","prevState","checkedItems","set","state","Map","render","checkboxes","options","map","key","get","onCheckboxChange","label"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AAEA,eAAe,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACrDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,8CAOAC,KAAK,IAAI;AAC1B,YAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAA1B;AACA,YAAMC,SAAS,GAAGJ,KAAK,CAACE,MAAN,CAAaG,OAA/B;AACA,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BC,QAAAA,YAAY,EAAED,SAAS,CAACC,YAAV,CAAuBC,GAAvB,CAA2BR,IAA3B,EAAiCG,SAAjC;AADY,OAAL,CAAvB;AAGD,KAbkB;;AAEjB,SAAKM,KAAL,GAAa;AACXF,MAAAA,YAAY,EAAE,IAAIG,GAAJ;AADH,KAAb;AAGD;;AAUDC,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAGjB,gBAAgB,CAAC,CAAD,CAAhB,CAAoBkB,OAApB,CAA4BC,GAA5B,CAAiCd,IAAD,IAAU;AAC3D,aACI;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAgC,QAAA,GAAG,EAAEA,IAAI,CAACe,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD;AACE,QAAA,IAAI,EAAEf,IAAI,CAACE,IADb;AAEE,QAAA,OAAO,EAAE,KAAKO,KAAL,CAAWF,YAAX,CAAwBS,GAAxB,CAA4BhB,IAAI,CAACE,IAAjC,CAFX;AAGE,QAAA,QAAQ,EAAE,KAAKe,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBjB,IAAI,CAACkB,KAA7B,CANF,CADF,CADJ;AAaD,KAdkB,CAAnB;AAeA,WAAO;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BN,UAA5B,CAAP;AACD;;AAjCoD","sourcesContent":["import React, { Component } from \"react\";\nimport Checkbox from \"./Checkbox\";\nimport {filterCatagories} from '../data/filtercatagorydata';\n\nexport default class ChoiceContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkedItems: new Map()\n    }\n  }\n\n  onCheckboxChange = event => {\n    const item = event.target.name;\n    const isChecked = event.target.checked;\n    this.setState(prevState => ({\n      checkedItems: prevState.checkedItems.set(item, isChecked)\n    }));\n  };\n\n  render() {\n    const checkboxes = filterCatagories[0].options.map((item) => {\n      return (\n          <li className=\"list-group-item\" key={item.key}>\n            <label>\n              <Checkbox\n                name={item.name}\n                checked={this.state.checkedItems.get(item.name)}\n                onChange={this.onCheckboxChange}\n              />\n              <span className=\"pl-3\">{item.label}</span>\n            </label>\n          </li>\n      );\n      \n    });\n    return <ul className=\"list-group\">{checkboxes}</ul>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}